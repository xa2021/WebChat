// <auto-generated />
using System;
using Chat5.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Chat5.Migrations
{
    [DbContext(typeof(Chat5DbContext))]
    partial class Chat5DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Chat5.Entities.Contact", b =>
                {
                    b.Property<Guid>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ContactId");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            ContactId = new Guid("4641435b-150f-4119-be3d-79ac6f5dbb89"),
                            FirstName = "Rafał",
                            LastName = "NN",
                            UserId = new Guid("b90f513d-5b7a-43bc-7e3d-08dc3dd09d7f")
                        },
                        new
                        {
                            ContactId = new Guid("a5610a23-0b7c-4790-852a-c411edaa5db1"),
                            FirstName = "Darek",
                            LastName = "Nieara",
                            UserId = new Guid("6dfc52b2-3a59-4ed9-f302-08dc41c91e0b")
                        });
                });

            modelBuilder.Entity("Chat5.Entities.Conversation", b =>
                {
                    b.Property<Guid>("ConversationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConversationName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConversationId");

                    b.ToTable("Conversations");

                    b.HasData(
                        new
                        {
                            ConversationId = new Guid("0620fc74-3645-404e-93cf-cb0673453349"),
                            ConversationName = "Testowe2"
                        },
                        new
                        {
                            ConversationId = new Guid("0620fc74-3645-404e-93cf-cb0673453342"),
                            ConversationName = "Testowe 3343"
                        });
                });

            modelBuilder.Entity("Chat5.Entities.GroupMember", b =>
                {
                    b.Property<Guid>("GroupMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConversationId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("JoinTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LeftTime")
                        .HasColumnType("datetime2");

                    b.HasKey("GroupMemberId");

                    b.HasIndex("ContactId");

                    b.HasIndex("ConversationId");

                    b.ToTable("GroupMembers");

                    b.HasData(
                        new
                        {
                            GroupMemberId = new Guid("d5b19dcb-dca9-4cbf-b6f0-7d541db0da26"),
                            ContactId = new Guid("4641435b-150f-4119-be3d-79ac6f5dbb89"),
                            ConversationId = new Guid("0620fc74-3645-404e-93cf-cb0673453349"),
                            JoinTime = new DateTime(2024, 3, 28, 14, 2, 36, 892, DateTimeKind.Local).AddTicks(9441),
                            LeftTime = new DateTime(2024, 3, 27, 14, 2, 36, 892, DateTimeKind.Local).AddTicks(9442)
                        },
                        new
                        {
                            GroupMemberId = new Guid("a547818e-894f-46ab-a9ca-191cea5d25f7"),
                            ContactId = new Guid("a5610a23-0b7c-4790-852a-c411edaa5db1"),
                            ConversationId = new Guid("0620fc74-3645-404e-93cf-cb0673453349"),
                            JoinTime = new DateTime(2024, 3, 28, 14, 2, 36, 892, DateTimeKind.Local).AddTicks(9447),
                            LeftTime = new DateTime(2024, 3, 28, 14, 2, 36, 892, DateTimeKind.Local).AddTicks(9449)
                        },
                        new
                        {
                            GroupMemberId = new Guid("d5b19dcb-dca9-4cbf-b6f0-7d541db0da12"),
                            ContactId = new Guid("4641435b-150f-4119-be3d-79ac6f5dbb89"),
                            ConversationId = new Guid("0620fc74-3645-404e-93cf-cb0673453349"),
                            JoinTime = new DateTime(2024, 3, 28, 14, 2, 36, 892, DateTimeKind.Local).AddTicks(9382),
                            LeftTime = new DateTime(2024, 3, 27, 14, 2, 36, 892, DateTimeKind.Local).AddTicks(9431)
                        });
                });

            modelBuilder.Entity("Chat5.Entities.Message", b =>
                {
                    b.Property<Guid>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConversationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("From")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SentDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MessageId");

                    b.HasIndex("ConversationId");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            MessageId = new Guid("1ea1d5af-d77f-4594-b7d4-0fe0785521ce"),
                            ConversationId = new Guid("0620fc74-3645-404e-93cf-cb0673453349"),
                            From = new Guid("4641435b-150f-4119-be3d-79ac6f5dbb89"),
                            SentDateTime = new DateTime(2024, 3, 28, 14, 2, 36, 892, DateTimeKind.Local).AddTicks(9456),
                            Text = "test sdajdfskjfdsjfdskl"
                        },
                        new
                        {
                            MessageId = new Guid("9ce32327-e691-4cc5-8355-97f8caf41a4c"),
                            ConversationId = new Guid("0620fc74-3645-404e-93cf-cb0673453349"),
                            From = new Guid("a5610a23-0b7c-4790-852a-c411edaa5db1"),
                            SentDateTime = new DateTime(2024, 3, 28, 14, 2, 36, 892, DateTimeKind.Local).AddTicks(9460),
                            Text = "test dfgfdg"
                        });
                });

            modelBuilder.Entity("Chat5.Entities.GroupMember", b =>
                {
                    b.HasOne("Chat5.Entities.Contact", "Contact")
                        .WithMany("GroupMembers")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Chat5.Entities.Conversation", "Conversation")
                        .WithMany("GroupMembers")
                        .HasForeignKey("ConversationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");

                    b.Navigation("Conversation");
                });

            modelBuilder.Entity("Chat5.Entities.Message", b =>
                {
                    b.HasOne("Chat5.Entities.Conversation", "Conversation")
                        .WithMany("Messages")
                        .HasForeignKey("ConversationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conversation");
                });

            modelBuilder.Entity("Chat5.Entities.Contact", b =>
                {
                    b.Navigation("GroupMembers");
                });

            modelBuilder.Entity("Chat5.Entities.Conversation", b =>
                {
                    b.Navigation("GroupMembers");

                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
